- if @court.court_number.present? && @court.court_number != 0
  %p
    #{display_court_numbers(@court, true)}
-# === Photo ===
- if @court.image_file_url.present?
  = image_tag(@court.image_file_url.to_s, :id => 'court-photo', :property => 'image') if @court.image_file

-# === Addresses ===
- if @court.addresses.present?
  - visiting = @court.addresses.visiting.first
  - postal = @court.addresses.postal.first
  .addresses
    .visit
      - if visiting.present?
        %h3= postal.present? ? 'Visit us:' : 'Visit or write to us:'
        = format_address visiting

      - if @court.locatable? && !print_view
        %a.hidden-print(href="#location") Map and directions

    - if postal.present?
      .postal
        %h3 Write to us:
        = format_address postal


- unless print_view
  -# === Alert ===
  - if @court.alert.present?
    %p.help-notice= @court.alert



-# === Opening times ===
- if @court.opening_times.present?

  %h2 Opening hours

  - @court.opening_times.each do |time|
    %p
      = precede time.opening_type.name do
        \: #{time.name}

-# === Emails ===
- if @court.emails.present?

  %h2 Email

  - @court.emails.each do |email|
    %p{:property => "contactPoint", :typeof => "ContactPoint"}
      - if not email.contact_type.nil? and email.contact_type.name.present?
        %span{:property => "contactType"}
          = "#{email.contact_type.name}:"
      = format_email_address email.address



-# === Contacts ===
- if @court.contacts.present?

  %h2 Phone

  - @court.contacts.each do |contact|
    - if (print_view && contact.in_leaflet) || !print_view
      - if contact.contact_type.present?
        - if contact.telephone?
          %p{:property => "telephone"}
            = precede contact.contact_type.name do
              - if contact.name.present?
                = surround ' (', ')' do
                  = contact.name
              \: #{link_to(contact.telephone, ['tel:', GlobalPhone.normalize(contact.telephone, :gb)].join)}
        - else
          %p= contact.contact_type.name




-# === Areas of law ===
- if @court.areas_of_law.present?

  %h2 Areas of law covered

  - areas = []
  - @court.areas_of_law.each_with_index do |area, i|
    - areas.push(i > 0 ? area.name.downcase : area.name)

  %p= areas.join ', '

  - if @court.is_county_court?
    %h2 Money claims
    %p Start a #{link_to "money claim online", "https://www.gov.uk/make-money-claim-online"} (eg a small claim), if someone owes you money.
    %p Send court forms or paperwork to the #{link_to "County Court Money Claims Centre", court_path("county-court-money-claims-centre-ccmcc")}.

    %h2 Possession claims
    %p Start a #{link_to "possession claim online", "https://www.gov.uk/possession-claim-online-recover-property"} to repossess a property or evict a tenant.


-# === Facilities ===
- if @court.court_facilities.present?
  %h2 Building facilities

  %p
    If you have a disability and need help coming to a hearing, please contact the court or tribunal to make sure the facilities meet your specific needs or to discuss a reasonable adjustment you need.

  %dl.facilities
    - @court.court_facilities.each do |court_facility|
      %dt
        %i.icon
          %img{:src => '/assets/facility_icons.png', :class => court_facility.facility.image, :alt => court_facility.facility.image_description, :title => court_facility.facility.name}
      - if court_facility.description.present?
        %dd= court_facility.description.html_safe

- unless print_view
  -# === Print links ===
  = render 'court_leaflets'

-# === Map ===
- if @court.locatable?
  %h2#location Location of the building
  %meta{:property => "map", :content => "http://maps.google.co.uk/maps?q=loc:#{@court.latitude}+#{@court.longitude}" }
  %form#directions.hidden-print{:action => "http://maps.google.co.uk/maps", :method => "get", :rel => "ext"}
    %label{:for => "saddr"} Enter a town or postcode to get directions
    %input{:name => "saddr", :type => "text", :value => params[:from]}
    %input{:name => "daddr", :type => "hidden", :value => "#{@court.latitude},#{@court.longitude}"}
    %input{:type => "submit", :value => "Get directions"}

  = gmaps({"markers" => {"data" => @court.to_gmaps4rails}, "map_options" => {"auto_zoom" => false, "zoom" => 15} })



-# === Court info ===
- if @court.info.present?
  %h2 Further information
  %div{:property => "description"}= @court.info.html_safe

